#! /usr/bin/env python

import sys
from scapy.all import *


#Assigning 3 Lists
opports=[] #Open Ports
clports=[] #Closed Ports
filports = [] #Filtered Ports
for dstport in range(1,101): #Traveresing from Port 1-101 
	#Sending a well format UDP packet with Dest Ip, Dest Port as Required, Flag is Set to S indicating TCP Syn scan
	ans= sr1(IP(dst = "10.10.111.1")/TCP (sport = RandShort(),dport = dstport,flags="S"),timeout =1 ,verbose =0) 
	if (str( type(ans)) == "<type 'NoneType'>"):#Check for the return type of the answer
		ans= sr1(IP(dst = "10.10.111.1")/TCP (sport = RandShort(),dport = dstport,flags="S"),timeout =1 ,verbose =0) #Resend if the ans is None
		if (str( type(ans)) == "<type 'NoneType'>"): 
			filports.append(dstport) #If the answer is None again then it is filtered
	elif (ans.haslayer(TCP)): #Check for TCP layer
		if (ans.getlayer(TCP).flags == 0x12): #If flag is SynAck Open port
			opports.append(dstport)
		elif (ans.getlayer(TCP).flags==0x14): #IF flag is Reset ack closed
			clports.append(dstport)
	elif (ans.haslayer(ICMP)): #If there is Some ICMP error message with the codes then it is a filteredports
		if (int(ans.getlayer(ICMP).type) ==3 and int( ans.getlayer(ICMP).code) in [1,2,3,9,10,13]):
			filports.append(dstport)
			
#Printing the ports in a sorted manner
print "##########The open ports are: ###########"
if len(opports)!=0:
	for i in opports:
		print "Port : " + str(i)
print "##########The closed ports are: ###########"
if len(clports)!=0:
	for i in clports:
		print "Port : " + str(i)
print "##########The filteres ports are: ###########"
if len(filports)!=0:
	for i in filports:
		print "Port : " + str(i)				
		
	